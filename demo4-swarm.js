import { createSwarm, createHandoffTool } from "@langchain/langgraph-swarm";
import { createReactAgent } from "@langchain/langgraph/prebuilt";
import { MemorySaver } from "@langchain/langgraph";
import { tool } from "@langchain/core/tools";
import { ChatOpenAI } from "@langchain/openai";
import { z } from "zod";
import 'dotenv/config';

const llm = new ChatOpenAI({
  model: "gpt-4o-mini",
  temperature: 0,
});

// Handoff tools
const transferToTech = createHandoffTool({
  name: "transfer_to_tech",
  description: "–ü–µ—Ä–µ–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.",
  agentName: "tech_support",
});

const transferToBilling = createHandoffTool({
  name: "transfer_to_billing",
  description: "–ü–µ—Ä–µ–¥–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –æ–ø–ª–∞—Ç–µ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Å—á–µ—Ç—É –∏ –±–∞–ª–∞–Ω—Å—É.",
  agentName: "billing_support",
});

const transferToGeneral = createHandoffTool({
  name: "transfer_to_general",
  description: "–í–µ—Ä–Ω—É—Ç—å –∫ –æ–±—â–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ –¥–ª—è –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
  agentName: "general_support",
});

// Technical Support Tool
const solve_tech_issue = tool(
  async ({
    issue
  }) => `–†–µ—à–µ–Ω–∏–µ –¥–ª—è '${issue}': –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`, {
    name: "solve_tech_issue",
    description: "–†–µ—à–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–±–ª–µ–º—É.",
    schema: z.object({
      issue: z.string().describe("–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã"),
    }),
  }
);

// Billing Support Tool
const check_account = tool(
  async ({
    accountId
  }) => `–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞ '${accountId}': –ê–∫—Ç–∏–≤–µ–Ω. –ë–∞–ª–∞–Ω—Å: 1500 —Ä—É–±.`, {
    name: "check_account",
    description: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏ –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞.",
    schema: z.object({
      accountId: z.string().describe("ID –∞–∫–∫–∞—É–Ω—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞"),
    }),
  }
);

// General Support Agent
const generalSupportAgent = createReactAgent({
  llm,
  tools: [transferToTech, transferToBilling],
  messageModifier: `–í—ã –∞–≥–µ–Ω—Ç –æ–±—â–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –ø–æ–Ω—è—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'transfer_to_tech' –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –∏ 'transfer_to_billing' –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –æ–ø–ª–∞—Ç–µ.`,
  name: "general_support",
});

// Technical Support Agent
const techSupportAgent = createReactAgent({
  llm,
  tools: [solve_tech_issue, transferToBilling, transferToGeneral],
  messageModifier: `–í—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 'solve_tech_issue' –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–± –æ–ø–ª–∞—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'transfer_to_billing'. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ –≤–∞—à–µ–π —á–∞—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'transfer_to_general'.`,
  name: "tech_support",
});

// Billing Support Agent
const billingSupportAgent = createReactAgent({
  llm,
  tools: [check_account, transferToTech, transferToGeneral],
  messageModifier: `–í—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–ø–ª–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'check_account' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞. –ï—Å–ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'transfer_to_tech'. –î–ª—è –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ - 'transfer_to_general'.`,
  name: "billing_support",
});


// Memory and Swarm setup
const checkpointer = new MemorySaver(); // –í–∞–∂–Ω–æ! –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

const customerSupport = createSwarm({
  agents: [
    generalSupportAgent,
    techSupportAgent,
    billingSupportAgent,
  ],
  defaultActiveAgent: "general_support",
});

const swarmApp = customerSupport.compile({
  checkpointer
});
console.log("üêù Swarm —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–∞–º—è—Ç—å—é.");

const config = {
  configurable: {
    thread_id: "customer_123"
  }
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
const logSwarmArchitecture = () => {
  console.log("üèóÔ∏è  –ê–†–•–ò–¢–ï–ö–¢–£–†–ê SWARM –°–ò–°–¢–ï–ú–´");
  console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
  console.log("üìã –ê–≥–µ–Ω—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:");
  console.log("  ü§ñ general_support  - –ü–µ—Ä–≤–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞)");
  console.log("  üîß tech_support     - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã");
  console.log("  üí∞ billing_support  - –í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ");
  console.log("");
  console.log("üîÑ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—á–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:");
  console.log("  transfer_to_tech    ‚Üí –ü–µ—Ä–µ–¥–∞—á–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É");
  console.log("  transfer_to_billing ‚Üí –ü–µ—Ä–µ–¥–∞—á–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –æ–ø–ª–∞—Ç–µ");
  console.log("  transfer_to_general ‚Üí –í–æ–∑–≤—Ä–∞—Ç –∫ –æ–±—â–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ");
  console.log("");
  console.log("üõ†Ô∏è  –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:");
  console.log("  solve_tech_issue    ‚Üí –†–µ—à–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º");
  console.log("  check_account       ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞");
  console.log("");
  console.log("üß† –ü–∞–º—è—Ç—å: MemorySaver —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏");
  console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");
};

const logTurnHeader = (turnNumber, userMessage) => {
  console.log(`\n${"=".repeat(60)}`);
  console.log(`  –•–û–î ${turnNumber}: –ê–ù–ê–õ–ò–ó SWARM –õ–û–ì–ò–ö–ò`);
  console.log(`${"=".repeat(60)}`);
  console.log(`üë§ –ö–õ–ò–ï–ù–¢: "${userMessage}"`);
  console.log("");
};

const logSwarmState = (label, result, previousAgent = null) => {
  console.log(`üìä ${label}:`);
  console.log(`  ü§ñ –ê–∫—Ç–∏–≤–Ω—ã–π –∞–≥–µ–Ω—Ç: ${result.activeAgent}`);
  
  if (previousAgent && previousAgent !== result.activeAgent) {
    console.log(`  üîÑ –ü–ï–†–ï–î–ê–ß–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø: ${previousAgent} ‚Üí ${result.activeAgent}`);
    
    const agentNames = {
      general_support: "–û–±—â–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      tech_support: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", 
      billing_support: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–ø–ª–∞—Ç–µ"
    };
    
    console.log(`  üí° –õ–û–ì–ò–ö–ê: ${agentNames[previousAgent]} –ø–µ—Ä–µ–¥–∞–ª –∑–∞–¥–∞—á—É ‚Üí ${agentNames[result.activeAgent]}`);
  }
  
  console.log(`  üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: ${result.messages.length}`);
  console.log("");
};

const logToolUsage = (result) => {
  const lastMessage = result.messages[result.messages.length - 1];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
  if (lastMessage.tool_calls && lastMessage.tool_calls.length > 0) {
    console.log("üõ†Ô∏è  –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í:");
    lastMessage.tool_calls.forEach(toolCall => {
      console.log(`  üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${toolCall.name}`);
      console.log(`  üìù –ê—Ä–≥—É–º–µ–Ω—Ç—ã:`, toolCall.args);
    });
    console.log("");
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—á–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
  const content = lastMessage.content?.toLowerCase() || "";
  if (content.includes("–ø–µ—Ä–µ–¥–∞—Ç—å") || content.includes("transfer")) {
    console.log("üîÑ –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ü–ï–†–ï–î–ê–ß–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø:");
    console.log("  üìã –ê–≥–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –¥—Ä—É–≥–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É");
    console.log("  üí≠ –ü—Ä–∏—á–∏–Ω–∞: –ó–∞–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –µ–≥–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏");
    console.log("");
  }
};

const logAgentResponse = (result) => {
  const lastMessage = result.messages[result.messages.length - 1];
  console.log("üí¨ –û–¢–í–ï–¢ –ê–ì–ï–ù–¢–ê:");
  console.log(`  "${lastMessage.content}"`);
  console.log("");
};

const logMemoryState = (result) => {
  console.log("üß† –°–û–°–¢–û–Ø–ù–ò–ï –ü–ê–ú–Ø–¢–ò:");
  console.log(`  üìö –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${result.messages.length}`);
  console.log("  üîó –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Ö–æ–¥–∞–º–∏");
  console.log("  üíæ Thread ID: customer_123");
  console.log("");
};

async function runSwarmDemo() {
  console.log("\nüêù –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø SWARM –°–ò–°–¢–ï–ú–´ –ü–û–î–î–ï–†–ñ–ö–ò –ö–õ–ò–ï–ù–¢–û–í");
  console.log("üéØ –¶–µ–ª—å: –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—É—é –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é –º–µ–∂–¥—É –∞–≥–µ–Ω—Ç–∞–º–∏\n");
  
  logSwarmArchitecture();
  
  let previousAgent = "general_support"; // –ù–∞—á–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç

  // ==================== –•–û–î 1 ====================
  logTurnHeader(1, "–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
  
  console.log("üîç –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê:");
  console.log("  üìù –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞");
  console.log("  üéØ –û–∂–∏–¥–∞–µ–º—ã–π –∞–≥–µ–Ω—Ç: general_support ‚Üí tech_support");
  console.log("  üí° –õ–æ–≥–∏–∫–∞: –û–±—â–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É\n");
  
  let turn1 = await swarmApp.invoke({
    messages: [{
      role: "user",
      content: "–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    }]
  }, config);
  
  logSwarmState("–†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò", turn1, previousAgent);
  logToolUsage(turn1);
  logAgentResponse(turn1);
  logMemoryState(turn1);
  
  previousAgent = turn1.activeAgent;

  // ==================== –•–û–î 2 ====================
  logTurnHeader(2, "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –æ—à–∏–±–∫–∞ 500");
  
  console.log("üîç –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê:");
  console.log("  üìù –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: –£—Ç–æ—á–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã");
  console.log("  üéØ –û–∂–∏–¥–∞–µ–º—ã–π –∞–≥–µ–Ω—Ç: tech_support (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)");
  console.log("  üí° –õ–æ–≥–∏–∫–∞: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å solve_tech_issue\n");
  
  let turn2 = await swarmApp.invoke({
    messages: [{
      role: "user",
      content: "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –æ—à–∏–±–∫–∞ 500"
    }]
  }, config);
  
  logSwarmState("–†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò", turn2, previousAgent);
  logToolUsage(turn2);
  logAgentResponse(turn2);
  logMemoryState(turn2);
  
  previousAgent = turn2.activeAgent;

  // ==================== –•–û–î 3 ====================
  logTurnHeader(3, "–°–ø–∞—Å–∏–±–æ! –ê –∫–∞–∫–æ–π —É –º–µ–Ω—è –±–∞–ª–∞–Ω—Å –ø–æ —Å—á–µ—Ç—É my_acc_id?");
  
  console.log("üîç –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê:");
  console.log("  üìù –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: –í–æ–ø—Ä–æ—Å –ø–æ –±–∞–ª–∞–Ω—Å—É –∞–∫–∫–∞—É–Ω—Ç–∞");
  console.log("  üéØ –û–∂–∏–¥–∞–µ–º—ã–π –∞–≥–µ–Ω—Ç: tech_support ‚Üí billing_support");
  console.log("  üí° –õ–æ–≥–∏–∫–∞: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞—Ç—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –æ–ø–ª–∞—Ç–µ\n");
  
  let turn3 = await swarmApp.invoke({
    messages: [{
      role: "user",
      content: "–°–ø–∞—Å–∏–±–æ! –ê –∫–∞–∫–æ–π —É –º–µ–Ω—è –±–∞–ª–∞–Ω—Å –ø–æ —Å—á–µ—Ç—É my_acc_id?"
    }]
  }, config);
  
  logSwarmState("–†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò", turn3, previousAgent);
  logToolUsage(turn3);
  logAgentResponse(turn3);
  logMemoryState(turn3);
  
  previousAgent = turn3.activeAgent;

  // ==================== –•–û–î 4 ====================
  logTurnHeader(4, "–•–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è");
  
  console.log("üîç –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê:");
  console.log("  üìù –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: –û–±—â–∏–π –≤–æ–ø—Ä–æ—Å / –∂–∞–ª–æ–±–∞");
  console.log("  üéØ –û–∂–∏–¥–∞–µ–º—ã–π –∞–≥–µ–Ω—Ç: billing_support ‚Üí general_support");
  console.log("  üí° –õ–æ–≥–∏–∫–∞: –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–ø–ª–∞—Ç–µ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞—Ç—å –∫ –æ–±—â–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ\n");
  
  let turn4 = await swarmApp.invoke({
    messages: [{
      role: "user",
      content: "–•–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"
    }]
  }, config);
  
  logSwarmState("–†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò", turn4, previousAgent);
  logToolUsage(turn4);
  logAgentResponse(turn4);
  logMemoryState(turn4);
  
  // ==================== –ò–¢–û–ì–ò ====================
  console.log(`\n${"=".repeat(60)}`);
  console.log("  üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê: –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í");
  console.log(`${"=".repeat(60)}`);
  console.log("‚úÖ –£–°–ü–ï–®–ù–û –ü–†–û–î–ï–ú–û–ù–°–¢–†–ò–†–û–í–ê–ù–û:");
  console.log("  üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É –∞–≥–µ–Ω—Ç–∞–º–∏");
  console.log("  üß† –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤ –ø–∞–º—è—Ç–∏");
  console.log("  üõ†Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤");
  console.log("  üéØ –ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞");
  console.log("");
  console.log("üìà –ü–û–õ–ù–´–ô –ü–£–¢–¨ –û–ë–†–ê–ë–û–¢–ö–ò:");
  console.log("  general_support ‚Üí tech_support ‚Üí billing_support ‚Üí general_support");
  console.log("");
  console.log("üîÑ –ü–†–û–î–ï–ú–û–ù–°–¢–†–ò–†–û–í–ê–ù–ù–´–ï –ü–ï–†–ï–•–û–î–´:");
  console.log("  1Ô∏è‚É£ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞    ‚Üí –ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É");
  console.log("  2Ô∏è‚É£ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π ‚Üí –û—Å—Ç–∞–µ—Ç—Å—è —É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞");
  console.log("  3Ô∏è‚É£ –í–æ–ø—Ä–æ—Å –ø–æ –æ–ø–ª–∞—Ç–µ       ‚Üí –ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –æ–ø–ª–∞—Ç–µ");
  console.log("  4Ô∏è‚É£ –û–±—â–∞—è –∂–∞–ª–æ–±–∞           ‚Üí –ö –æ–±—â–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ");
  console.log("");
  console.log("üèÜ SWARM –°–ò–°–¢–ï–ú–ê –ü–û–ö–ê–ó–ê–õ–ê –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨!");
  console.log("   –ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏!");
  console.log(`${"=".repeat(60)}\n`);
}

runSwarmDemo();